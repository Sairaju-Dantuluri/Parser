,$,integer_literal,float_literal,string_literal,TRUE,FALSE,;,arith_stmt_lit,?,:,relop_lt,relop_gt,relop_le,relop_ge,relop_eq,relop_ne,op_not,logical_and,logical_or,id,(,),=,",",+,-,*,/,%,{,},[,],print,scan,if,else,return,while,until,int,float,boolean,string
S,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,,S ::= S’ $,,,,,,,,,,,,S ::= S’ $,S ::= S’ $,,,,,,,,,,,,,S ::= S’ $,S ::= S’ $,S ::= S’ $,,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $
S’,S’ ::= ε,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,,S’ ::= stmt S’,,,,,,,,,,,,S’ ::= stmt S’,S’ ::= stmt S’,,,,,,,,,,S’ ::= ε,,,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’
literal,,literal ::= integer_literal,literal ::= float_literal,literal ::= string_literal,literal ::= true,literal ::= false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stmt,,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,,stmt ::= arith_stmt_lit ;,,,,,,,,,,,,stmt ::= id_stmt ;,stmt ::= id_stmt ;,,,,,,,,,,,,,stmt ::= print_stmt ;,stmt ::= scan_stmt ;,stmt ::= if_stmt,,stmt ::= return_stmt ;,stmt ::= loop_stmt,stmt ::= loop_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt
cond,,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,,,,,,,,,,,cond ::= relop1 cond,,,cond ::= id_stmt cond’,cond ::= id_stmt cond’,,,,,,,,,,,,,cond ::= print_stmt cond’,cond ::= scan_stmt cond’,,,,,,,,,
cond’,,,,,,,cond’ ::= ε,,cond’ ::= ? cond : cond,cond’ ::= ε,cond’ ::= relop cond,cond’ ::= relop cond,cond’ ::= relop cond,cond’ ::= relop cond,cond’ ::= relop cond,cond’ ::= relop cond,,cond’ ::= relop cond,cond’ ::= relop cond,,,cond’ ::= ε,,,,,,,,,,,,,,,,,,,,,,
relop,,,,,,,,,,,relop ::= relop_lt,relop ::= relop_gt,relop ::= relop_le,relop ::= relop_ge,relop ::= relop_eq,relop ::= relop_ne,,relop ::= logical_and,relop ::= logical_or,,,,,,,,,,,,,,,,,,,,,,,,,
relop1,,,,,,,,,,,,,,,,,relop1 ::= op_not,,,,,,,,,,,,,,,,,,,,,,,,,,,
id_stmt,,,,,,,,,,,,,,,,,,,,id_stmt ::= id assfunarth,id_stmt ::= ( id_stmt ),,,,,,,,,,,,,,,,,,,,,,,
assfunarth,,,,,,,assfunarth ::= arithm_stmt,,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,,assfunarth ::= funuse_stmt,assfunarth ::= arithm_stmt,assfunarth ::= assign_stmt,,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,assfunarth ::= arithm_stmt,,,,,,,,,,,,,,,
assign_stmt,,,,,,,,,,,,,,,,,,,,,,,assign_stmt ::= = idlitfun arithm_stmt,,,,,,,,,,,,,,,,,,,,,
idlitfun,,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,,,,,,,,,,,,,,idlitfun ::= id func,,,,,,,,,,,,,,,,,,,,,,,,
func,,,,,,,func ::= ε,,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,,func ::= ε,func ::= ε,,func ::= funuse_stmt,func ::= ε,,,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,,,,,,,,,,,,,,,
funuse_stmt,,,,,,,,,,,,,,,,,,,,,funuse_stmt ::= ( args ),,,,,,,,,,,,,,,,,,,,,,,
args,,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,,,,,,,,,,,,,,args ::= id cargs,,args ::= ε,,,,,,,,,,,,,,,,,,,,,,
cargs,,cargs ::= args,cargs ::= args,cargs ::= args,cargs ::= args,cargs ::= args,,,,,,,,,,,,,,cargs ::= args,,cargs ::= args,,"cargs ::= , args",,,,,,,,,,,,,,,,,,,,
arithm_stmt,,,,,,,arithm_stmt ::= ε,,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= ε,,arithm_stmt ::= ε,arithm_stmt ::= ε,,,arithm_stmt ::= ε,,,arithm_stmt ::= op idlitfun arithm_stmt,arithm_stmt ::= op idlitfun arithm_stmt,arithm_stmt ::= op idlitfun arithm_stmt,arithm_stmt ::= op idlitfun arithm_stmt,arithm_stmt ::= op idlitfun arithm_stmt,,,,,,,,,,,,,,,
arithm_stmt_lit,,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
arithm_stmt_fun,,,,,,,,,,,,,,,,,,,,,arithm_stmt_fun ::= funuse_stmt arithm_stmt,,,,,,,,,,,,,,,,,,,,,,,
op,,,,,,,,,,,,,,,,,,,,,,,,,op ::= +,op ::= -,op ::= *,op ::= /,op ::= %,,,,,,,,,,,,,,,
idtype_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec
fundec,,,,,,,fundec ::= decl_stmt ;,,,,,,,,,,,,,,fundec ::= function,,fundec ::= decl_stmt ;,,,,,,,,,fundec ::= decl_stmt ;,,,,,,,,,,,,
function,,,,,,,,,,,,,,,,,,,,,function ::= ( fundefparam ) { S’ },,,,,,,,,,,,,,,,,,,,,,,
fundefparam,,,,,,,,,,,,,,,,,,,,,,fundefparam ::= ε,,,,,,,,,,,,,,,,,,,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1
fundefparam1,,,,,,,,,,,,,,,,,,,,,,fundefparam1 ::= ε,,"fundefparam1 ::= , idtype id fundefparam1",,,,,,,,,,,,,,,,,,,,
decl_stmt,,,,,,,decl_stmt ::= declstmt1 ass,,,,,,,,,,,,,,,,decl_stmt ::= declstmt1 ass,,,,,,,,,decl_stmt ::= declstmt1 ass,,,,,,,,,,,,
declstmt1,,,,,,,declstmt1 ::= ε,,,,,,,,,,,,,,,,declstmt1 ::= ε,,,,,,,,,declstmt1 ::= [ integer_literal ],,,,,,,,,,,,
ass,,,,,,,ass ::= ε,,,,,,,,,,,,,,,,ass ::= assign_stmt,,,,,,,,,,,,,,,,,,,,,
print_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,print_stmt ::= print ( cond ),,,,,,,,,,
scan_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scan_stmt ::= scan funuse_stmt,,,,,,,,,
if_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,if_stmt ::= if ( cond ) { S’ } else_stmt,,,,,,,,
else_stmt,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,,else_stmt ::= ε,,,,,,,,,,,,else_stmt ::= ε,else_stmt ::= ε,,,,,,,,,,else_stmt ::= ε,,,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= else elif_stmt,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε
elif_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elif_stmt ::= { S’ },,,,,,elif_stmt ::= if ( cond ) { S’ },,,,,,,,
return_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,return_stmt ::= return ret_type,,,,,,
ret_type,,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= ε,,,,,,,,,,ret_type ::= cond,,,ret_type ::= cond,ret_type ::= cond,,,,,,,,,,,,,ret_type ::= cond,ret_type ::= cond,,,,,,,,,
loop_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,loop_stmt ::= while loop_stmt’,loop_stmt ::= until loop_stmt’,,,,
loop_stmt’,,,,,,,,,,,,,,,,,,,,,loop_stmt’ ::= ( cond ) { S’ },,,,,,,,,,,,,,,,,,,,,,,
idtype,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,idtype ::= int,idtype ::= float,idtype ::= boolean,idtype ::= string