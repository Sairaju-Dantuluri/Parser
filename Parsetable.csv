,$,integer_literal,float_literal,string_literal,true,false,;,arith_stmt_lit,?,:,relop_lt,relop_gt,relop_le,relop_ge,relop_eq,relop_ne,op_not,logical_and,logical_or,id,(,),[,],=,",",+,-,*,/,%,{,},print,scan,if,else,return,while,until,int,float,boolean,string
S,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,,S ::= S’ $,,,,,,,,,,,,S ::= S’ $,S ::= S’ $,,,,,,,,,,,,,S ::= S’ $,S ::= S’ $,S ::= S’ $,,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $,S ::= S’ $
S’,S’ ::= ε,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,,S’ ::= stmt S’,,,,,,,,,,,,S’ ::= stmt S’,S’ ::= stmt S’,,,,,,,,,,,,S’ ::= ε,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’,S’ ::= stmt S’
literal,,literal ::= integer_literal,literal ::= float_literal,literal ::= string_literal,literal ::= true,literal ::= false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stmt,,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,stmt ::= literal ;,,stmt ::= arith_stmt_lit ;,,,,,,,,,,,,stmt ::= id_stmt ;,stmt ::= id_stmt ;,,,,,,,,,,,,,stmt ::= print_stmt ;,stmt ::= scan_stmt ;,stmt ::= if_stmt,,stmt ::= return_stmt ;,stmt ::= loop_stmt,stmt ::= loop_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt,stmt ::= idtype_stmt
cond,,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,cond ::= literal cond’,,,,,,,,,,,cond ::= relop1 cond,,,cond ::= id_stmt cond’,cond ::= id_stmt cond’,,,,,,,,,,,,,cond ::= print_stmt cond’,cond ::= scan_stmt cond’,,,,,,,,,
cond’,,,,,,,cond’ ::= ε,,cond’ ::= ? cond : cond,cond’ ::= ε,,,,,,,,,,,,cond’ ::= ε,,,,,,,,,,,,,,,,,,,,,,
op,,,,,,,,,,,op ::= relop_lt,op ::= relop_gt,op ::= relop_le,op ::= relop_ge,op ::= relop_eq,op ::= relop_ne,,op ::= logical_and,op ::= logical_or,,,,,,,,op ::= +,op ::= -,op ::= *,op ::= /,op ::= %,,,,,,,,,,,,,
relop1,,,,,,,,,,,,,,,,,relop1 ::= op_not,,,,,,,,,,,,,,,,,,,,,,,,,,,
id_stmt,,,,,,,,,,,,,,,,,,,,id_stmt ::= id assfunarth,id_stmt ::= ( id_stmt ) assfunarth,,,,,,,,,,,,,,,,,,,,,,,
assfunarth,,,,,,,assfunarth ::= assarth,,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,,assfunarth ::= assarth,assfunarth ::= assarth,,assfunarth ::= funuse_stmt,assfunarth ::= assarth,assfunarth ::= assarth,,assfunarth ::= assarth,,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,assfunarth ::= assarth,,,,,,,,,,,,,
assarth,,,,,,,assarth ::= arithm_stmt,,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,,assarth ::= arithm_stmt,assarth ::= arithm_stmt,,,assarth ::= arithm_stmt,assarth ::= [ integer_literal ] assarth,,assarth ::= assign_stmt,,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,assarth ::= arithm_stmt,,,,,,,,,,,,,
assign_stmt,,,,,,,,,,,,,,,,,,,,,,,,,assign_stmt ::= = assbracket,,,,,,,,,,,,,,,,,,,
assbracket,,assbracket ::= idlitfun arithm_stmt,assbracket ::= idlitfun arithm_stmt,assbracket ::= idlitfun arithm_stmt,assbracket ::= idlitfun arithm_stmt,assbracket ::= idlitfun arithm_stmt,,,,,,,,,,,,,,assbracket ::= idlitfun arithm_stmt,assbracket ::= ( assbracket ) arithm_stmt,,,,,,,,,,,,,,,,,,,,,,,
idlitfun,,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,idlitfun ::= literal,,,,,,,,,,,,,,idlitfun ::= id arrbracket func,,,,,,,,,,,,,,,,,,,,,,,,
arrbracket,,,,,,,arrbracket ::= ε,,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,,arrbracket ::= ε,arrbracket ::= ε,,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= [ intlitid ] arrbracket,,,,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,arrbracket ::= ε,,,,,,,,,,,,,
func,,,,,,,func ::= ε,,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,,func ::= ε,func ::= ε,,func ::= funuse_stmt,func ::= ε,,,,,func ::= ε,func ::= ε,func ::= ε,func ::= ε,func ::= ε,,,,,,,,,,,,,
funuse_stmt,,,,,,,,,,,,,,,,,,,,,funuse_stmt ::= ( args ),,,,,,,,,,,,,,,,,,,,,,,
args,,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,args ::= literal cargs,,,,,,,,,,,,,,args ::= id cargs,,args ::= ε,,,,,,,,,,,,,,,,,,,,,,
cargs,,,,,,,,,,,,,,,,,,,,,,,,,,"cargs ::= , args",,,,,,,,,,,,,,,,,,
arithm_stmt,,,,,,,arithm_stmt ::= ε,,arithm_stmt ::= ε,arithm_stmt ::= ε,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,,,arithm_stmt ::= ε,,,,,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,arithm_stmt ::= op arthbracket,,,,,,,,,,,,,
arthbracket,,arthbracket ::= idlitfun arithm_stmt,arthbracket ::= idlitfun arithm_stmt,arthbracket ::= idlitfun arithm_stmt,arthbracket ::= idlitfun arithm_stmt,arthbracket ::= idlitfun arithm_stmt,,,,,,,,,,,,,,arthbracket ::= idlitfun arithm_stmt,arthbracket ::= ( arthbracket ),,,,,,,,,,,,,,,,,,,,,,,
arithm_stmt_lit,,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,arithm_stmt_lit ::= literal arithm_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
arithm_stmt_fun,,,,,,,,,,,,,,,,,,,,,arithm_stmt_fun ::= funuse_stmt arithm_stmt,,,,,,,,,,,,,,,,,,,,,,,
idtype_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec,idtype_stmt ::= idtype id fundec
fundec,,,,,,,fundec ::= decl_stmt ;,,,,,,,,,,,,,,fundec ::= function,,fundec ::= decl_stmt ;,,fundec ::= decl_stmt ;,,,,,,,,,,,,,,,,,,,
function,,,,,,,,,,,,,,,,,,,,,function ::= ( fundefparam ) { S’ },,,,,,,,,,,,,,,,,,,,,,,
fundefparam,,,,,,,,,,,,,,,,,,,,,,fundefparam ::= ε,,,,,,,,,,,,,,,,,,,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1,fundefparam ::= idtype id fundefparam1
fundefparam1,,,,,,,,,,,,,,,,,,,,,,fundefparam1 ::= ε,,,,"fundefparam1 ::= , idtype id fundefparam1",,,,,,,,,,,,,,,,,,
decl_stmt,,,,,,,decl_stmt ::= declstmt1 ass,,,,,,,,,,,,,,,,decl_stmt ::= declstmt1 ass,,decl_stmt ::= declstmt1 ass,,,,,,,,,,,,,,,,,,,
declstmt1,,,,,,,declstmt1 ::= ε,,,,,,,,,,,,,,,,declstmt1 ::= [ intlitid ],,declstmt1 ::= ε,,,,,,,,,,,,,,,,,,,
intlitid,,intlitid ::= integer_literal,,,,,,,,,,,,,,,,,,intlitid ::= id,,,,,,,,,,,,,,,,,,,,,,,,
ass,,,,,,,ass ::= ε,,,,,,,,,,,,,,,,,,ass ::= assign_stmt,,,,,,,,,,,,,,,,,,,
print_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,print_stmt ::= print ( cond ),,,,,,,,,,
scan_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scan_stmt ::= scan funuse_stmt,,,,,,,,,
if_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,if_stmt ::= if ( cond ) { S’ } else_stmt,,,,,,,,
else_stmt,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,,else_stmt ::= ε,,,,,,,,,,,,else_stmt ::= ε,else_stmt ::= ε,,,,,,,,,,,,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= else elif_stmt,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε,else_stmt ::= ε
elif_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elif_stmt ::= { S’ },,,,elif_stmt ::= if ( cond ) { S’ },,,,,,,,
return_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,return_stmt ::= return ret_type,,,,,,
ret_type,,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= cond,ret_type ::= ε,,,,,,,,,,ret_type ::= cond,,,ret_type ::= cond,ret_type ::= cond,,,,,,,,,,,,,ret_type ::= cond,ret_type ::= cond,,,,,,,,,
loop_stmt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,loop_stmt ::= while loop_stmt’,loop_stmt ::= until loop_stmt’,,,,
loop_stmt’,,,,,,,,,,,,,,,,,,,,,loop_stmt’ ::= ( cond ) { S’ },,,,,,,,,,,,,,,,,,,,,,,
idtype,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,idtype ::= int,idtype ::= float,idtype ::= boolean,idtype ::= string